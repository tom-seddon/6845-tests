;-------------------------------------------------------------------------
; This code is free software: you can redistribute it and/or modify it
; under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.

; This code is distributed in the hope that it will be useful, but
; WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
; General Public License for more details.

; You should have received a copy of the GNU General Public License
; along with this code. If not, see <https://www.gnu.org/licenses/>.
;-------------------------------------------------------------------------

draw_timer_adjustment=0

;-------------------------------------------------------------------------

                .include "framework.s65"
                
;-------------------------------------------------------------------------

                .section zp
                .send zp

;-------------------------------------------------------------------------

                .section code

;-------------------------------------------------------------------------

fx_init_1: .proc
                lda #22
                jsr oswrch

                lda #5
                jsr oswrch

                ldx #<load_screen2
                ldy #>load_screen2
                jsr oscli

                rts

load_screen2:
                .text "LOAD $.SCREEN2",13
                .pend

;-------------------------------------------------------------------------

fx_init_2: .proc
;                .set_crtc 7,0
                .set_crtc 12,6
                .set_crtc 13,0
                .set_crtc 8,0
                .set_crtc 6,255
                .set_crtc 5,0
                
                lda #$82
                sta $fe4e

loop:
                lda #2
-
                bit $fe4d
                beq -
                sta $fe4d

                .nops 64*128

                lda #mode2_palette(0,1)
                sta video_palette

                .nops 128

                lda #mode2_palette(0,0)
                sta video_palette

                jmp loop
                
                rts
                .pend

;-------------------------------------------------------------------------

fx_update: .proc
                jmp ($fffc)
                .pend

;-------------------------------------------------------------------------

                .align 256
fx_draw: .proc
                jmp ($fffc)
                .pend
                
;-------------------------------------------------------------------------

                .send code
                