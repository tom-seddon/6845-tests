draw_timer_adjustment=0

                .include "framework.s65"

;-------------------------------------------------------------------------

                .section zp
main_crtc_addr: .fill 2
ptr: .fill 2
counter: .fill 1
                .send zp

                .section code

fx_init_1: .proc

                ; cheekily fill in $3000...$57ff with blue...
                lda #22
                jsr oswrch
                lda #1
                jsr oswrch

                lda #17
                jsr oswrch
                lda #130
                jsr oswrch

                lda #12
                jsr oswrch
                
                lda #22
                jsr oswrch
                lda #5
                jsr oswrch

                lda #17
                jsr oswrch
                lda #129
                jsr oswrch

                lda #12
                jsr oswrch

                .set_crtc 12,$0c
                .set_crtc 13,$00
                .set_crtc 6,25
                ; .set_crtc 7,31

                ldx #<load_scr_hud
                ldy #>load_scr_hud
                jsr oscli

                ldx #2
                ldy #4
                jsr vdu19

                ldx #3
                ldy #3
                jsr vdu19

                rts

vdu19:
                lda #19
                jsr oswrch

                txa
                jsr oswrch

                tya
                jsr oswrch

                lda #0
                jsr oswrch
                jsr oswrch
                jmp oswrch

load_scr_hud:
                .text "LOAD SCR-HU2 FFFF6000",13
                .pend

;-------------------------------------------------------------------------

cycles_wait_1024:
                jsr cycles_wait_512
cycles_wait_512:
                jsr cycles_wait_256
cycles_wait_256:
                jsr cycles_wait_128
                jmp cycles_wait_128
                
;-------------------------------------------------------------------------

fx_init_2: .proc
                lda #<crtc_addr(main_addr_0)
                sta main_crtc_addr+0

                lda #>crtc_addr(main_addr_0)
                sta main_crtc_addr+1
                
                rts
                .pend

;-------------------------------------------------------------------------

wait_roughly_x_scanlines: .proc
loop:
                .nops 128-5
                dex
                bne loop
                rts
                .pend

top_addr=$6000
main_addr_0=$6280
main_addr_1=$3280
dashboard_addr=$6000+19*320

fx_update: .proc
                ; .set_crtc 12,$0c
                ; .set_crtc 13,$00

                inc counter
                lda counter
                and #31
                bne +

                ; lda main_crtc_addr+0
                ; eor #(<crtc_addr(main_addr_0))^(<crtc_addr(main_addr_1))
                ; sta main_crtc_addr+0

                ; lda main_crtc_addr+1
                ; eor #(>crtc_addr(main_addr_0))^(>crtc_addr(main_addr_1))
                ; sta main_crtc_addr+1

+                
                ; prepare for start of next screen
                .set_crtc 13,<crtc_addr(top_addr)
                .set_crtc 12,>crtc_addr(top_addr)
                
                .set_crtc 7,32
                .set_crtc 6,24
                
                rts
                .pend

fx_draw: .proc
                ; 2/2 rows of HUD part, and prepare address for game
                ; part

                lda #$01
                sta $fe21       ;6

                .set_crtc 4,1   ;22

                lda #12              ;2
                sta $fe00            ;8
                lda main_crtc_addr+1 ;11
                sta $fe01            ;18

                lda #13              ;20
                sta $fe00            ;26
                lda main_crtc_addr+0 ;29
                sta $fe01            ;36  52

                lda #$07
                sta $fe21

                ; wait until in game part

                jsr cycles_wait_1024
                jsr cycles_wait_1024
                jsr cycles_wait_128
                .nops 60

                ; 18/18 rows of game part, and prepare address for
                ; dashboard part
                lda #$02
                sta $fe21
                
                .set_crtc 4,36

                .set_crtc 12,>crtc_addr(dashboard_addr)
                .set_crtc 13,<crtc_addr(dashboard_addr)

                lda #$07
                sta $fe21

                ldx #135
                jsr wait_roughly_x_scanlines

                lda #$03
                sta $fe21

                jsr cycles_wait_128

                lda #$07
                sta $fe21

                rts
                .pend

;-------------------------------------------------------------------------

                .send code
                